spring:
  datasource:
    url: jdbc:postgresql://${DATABASE_URL:localhost:5432}/authentication-service
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  kafka:
    bootstrap-servers: ${KAFKA_URL:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: authentication-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    retry:
      topic:
        enabled: true
  mail:
    default-encoding: UTF-8
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    host: smtp.gmail.com
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls.enable: true
          ssl.trust: smtp.gmail.com

eureka:
  client:
    service-url:
      defaultZone: http://${DISCOVERY_SERVER_URL:localhost:8761}/eureka

secret:
  key: ${JWT_SECRET_KEY}

kafka:
  topics:
    authentication-service:
      consumer: authentication-service-consumer-topic
      producer: authentication-service-producer-topic
